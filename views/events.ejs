<%- include('partials/header'); -%>

<div class="content">
    <div class="card">
        <div class="card-header card-header-primary">
          <h4 class="card-title ">Events</h4>
          <div class="d-flex justify-content-between">
            <p class="card-category">All Scheduled Events</p>
            <div>
            <a href="" class="btn btn-warning text-white"  data-toggle="modal" data-target="#exampleModalCenter"><i class="material-icons">event</i></a></div>
          </div>
          
        </div>
        <div class="card-body">
          <table id="example" class="table " style="width:100%">
              <thead class="thead-light">
                  <tr>
                      <th> Event <i class="material-icons">swap_vert</i></th>
                      <th>Date <i class="material-icons">swap_vert</i></th>
                      <th>Venue<i class="material-icons">swap_vert</i></th>
                      <th>Action<i class="material-icons">swap_vert</i></th> 
                  </tr>
              </thead>  
              <tbody>
                <% eventsData.forEach(function(value,i) { %>
                  <tr>
                  <td data-toggle="modal" data-target="#exampleModalCenter2" onClick="show('<%=i %>')"><%= value.event %></td>
                  <td data-toggle="modal" data-target="#exampleModalCenter2" onClick="show('<%=i %>')"><%= value.date %></td>
                  <td data-toggle="modal" data-target="#exampleModalCenter2" onClick="show('<%=i %>')"><%= value.venue %></td>
                  <td onclick="deleteEvent('<%= value.id %>','<%= value.image %>')"><a class="btn btn-danger btn-sm text-white"><i class="material-icons">delete</i></a></td>
                </tr>
               <% }) %>
              </tbody>
          </table>
         </div>
   </div>
</div>
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle">Event</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div>
            <form action="/" id="form-event">
            <div class="form-group m-2">
                <label class="bmd-label-floating">Name</label>
                <input type="text" name='eventname' id="eventname" class="form-control-1">
               </div>
               <div class="form-group m-2">
                <label class="bmd-label-floating">Venue</label>
                <input type="text" name='eventvenue' id='eventvenue' class="form-control-1">
               </div>
               <div class="form-group m-2">
                <label class="bmd-label-floating">Details</label>
                <textarea type="text" name='eventdetails' id='eventdetails' class="form-control-1" ></textarea>
               </div>
               <div class="form-group m-2">
                <label class="bmd-label-floating">Date</label>
                <input type="text" name='event-date' id='eventdate' class="form-control-1" style=" width:60%">
               </div>
               <div class="input-group mb-3">
                <div class="custom-file">
                  <input type="file"  id="eventimage" onchange="document.getElementById('imagesrc').innerHTML= 'filename: '+this.files[0].name" class="custom-file-input" name="eventimage" >
                  <label class="custom-file-label" for="inputGroupFile01"><span><div class="form-group d-flex justify-content-around m-2">
                   </div></span></label>
                </div>
              </div>
              <strong>
              <p id="imagesrc" class="text-center text-success"></p></strong>
              <div class="progress">
                <div class="progress-bar" id="progress" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
              </div>
              <br>
              <div class="text-center">
                <button type="button" id="btnaddevent" onclick="addEvent()" class="btn btn-primary">Add Event</button>
              <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
              </div>
              <br>
              <div id="spin" class=" text-center">
              </div>
            </form>
            </div>

        </div>
        <div class="modal-footer">
         
          
        </div>
      </div>
    </div>
  </div>
 
<script src="js/plugins/jquery-3.5.1.js"></script>
<script src="js/plugins/jquery.dataTables.min.js"></script>
<script src="js/plugins/jqueryui.min.js"></script>
<script src="js/plugins/rowGroup.min.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.4.3/firebase.js"></script>
<script>
  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  var firebaseConfig = {
    apiKey: "AIzaSyB_FWRbwP_TtFeYQ8OXwj9WJuA2_wTqcrQ",
    authDomain: "farchis-bbe96.firebaseapp.com",
    databaseURL: "https://farchis-bbe96.firebaseio.com",
    projectId: "farchis-bbe96",
    storageBucket: "farchis-bbe96.appspot.com",
    messagingSenderId: "907377570025",
    appId: "1:907377570025:web:e51de55be0beaaedcec078",
    measurementId: "G-Y4SV39D0FF"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
</script>

<script>
    $(document).ready(function() {
        $('#example').DataTable( {
            order: [[2, 'asc']],

           
        } );
    } );
</script>
<script>

  $(document).ready(function() {

   
    navlinks= document.getElementsByClassName('nav-item'); 
    for(var i =0; i<navlinks.length; i++){
      var link = navlinks[i];
      link.className="nav-item"
    }
    document.getElementById('events').className='nav-item active'
 
   } );

    $(function() {
      $('input[name="event-date"]').daterangepicker({
        timePicker: true,
        startDate: moment().startOf('hour'),
        endDate: moment().startOf('hour').add(32, 'hour'),
        locale: {
          format: 'M/DD hh:mm A'
        }
      });
    });

 
    function show(value){
        var index = parseInt(value);
        var events = JSON.parse(<%- JSON.stringify(Data2) %>)
        document.getElementById('event-name').value=events[index].event
        document.getElementById('event-date').value=events[index].date
        document.getElementById('event-details').value=events[index].details
        document.getElementById('event-venue').value=events[index].venue    
    }

    function addEvent(){
      var formEvents = document.getElementById("form-event")
      var progress1 = document.getElementById("progress")
     
      
      var eventname = document.getElementById("eventname").value
      var eventvenue = document.getElementById("eventvenue").value
      var eventdate = document.getElementById("eventdate").value
      var eventdetails = document.getElementById("eventdetails").value
      if(eventvenue==""||eventdate==""||eventdetails==""||eventname==""){
        swal({
          title: "Failed",
          text: "Please Complete all fields",
          icon: "warning",
          button: "close",
        })
        .then((value) => {
          location.reload(true);
      });
        
      }
      
      var image = document.getElementById("eventimage").files[0];
      
      if(!image){
        swal({
          title: "Failed",
          text: "Please add an image",
          icon: "warning",
          button: "close",
        })
        .then((value) => {
          location.reload(true);
          return
      });
       
      }

      var spindiv = document.getElementById("spin").innerHTML=`
      <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
      </div>
      `

      document.getElementById("imagesrc").value=image.name
      var imageval = ""+Math.random()*78+image.name;
      var storageRef = firebase.storage().ref('events/'+imageval);
      var task = storageRef.put(image);
      var data2= {upload:true, eventname, eventvenue,eventdate, eventdetails,image:imageval}
  
      task.on('state_changed', function progress(snapshot) {
          var percentage = (snapshot.bytesTransferred / snapshot.totalBytes)*100
          console.log(data2)
          
          progress1.style="width :"+percentage+"%;"
          progress1.innerHTML= percentage + "%";
      }, function error(err){
        alert(err)
      },function completed (){
        console.log(data2)
        fetch('/events', {
          method: 'POST', // or 'PUT'
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data2),
        })
        .then(response => response.json())
        .then(data => {
          swal({
            title: "Success",
            text: "Event has been created successfully  ",
            icon: "success",
            button: "close",
          })
          .then((value) => {
            location.reload(true);
        });
             
        })
        .catch((error) => {
          swal({
            title: "Failed",
            text: "Failed to add event",
            icon: "warning",
            button: "close",
          })
          .then((value) => {
            location.reload(true);
        });
      
            
        });

      })
        
    }
    function  deleteEvent(id,image){
     
      const data = { id };

      var storageRef = firebase.storage().ref('events/'+image);
      
      storageRef.delete().then(() => {
          
        }).catch((error) => {
          swal({
            title: "Failed",
            text: "Failed to delete event",
            icon: "warning",
            button: "close",
          })
          .then((value) => {
            
            location.reload(true);
            return
        });
        });
      
      fetch('/events', {
        method: 'POST', // or 'PUT'
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      .then(response => response.json())
      .then(data => {
        swal({
          title: "Success",
          text: "Event was deleted successfully ",
          icon: "success",
          button: "close",
        })
        .then((value) => {
          location.reload(true);
      });
      })
      .catch((error) => {
        swal({
          title: "Failed",
          text: "Failed to delete event",
          icon: "warning",
          button: "close",
        })
        .then((value) => {
          location.reload(true);
      });
        
      });
          }
    
     
        </script>


<%- include('partials/footer'); -%>